apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: github-legacy-java-app-build-edp
  namespace: dx-dev
spec:
  finally:
    - name: update-cbb
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)
        - name: CURRENT_BUILD_NUMBER
          value: $(tasks.get-version.results.BUILD_ID)
      taskRef:
        kind: Task
        name: update-cbb
      when:
        - input: $(tasks.status)
          operator: in
          values:
            - Succeeded
  params:
    - default: >-
        https://tekton-dx-dev.eks-sandbox.aws.main.edp.projects.epam.com/#/namespaces/$(context.pipelineRun.namespace)/pipelineruns/$(context.pipelineRun.name)
      name: pipelineUrl
      type: string
    - default: https://github.com/epmd-edp/container-kaniko-docker
      description: git url to clone
      name: git-source-url
      type: string
    - default: edp
      description: git revision to checkout (branch, tag, sha, refâ€¦)
      name: git-source-revision
      type: string
    - description: Project name
      name: CODEBASE_NAME
      type: string
    - description: Codebasebranch name
      name: CODEBASEBRANCH_NAME
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.git-source-url)
        - name: revision
          value: $(params.git-source-revision)
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds
    - name: init-values
      params:
        - name: CODEBASE_NAME
          value: $(params.CODEBASE_NAME)
        - name: BRANCH_NAME
          value: $(params.git-source-revision)
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: init-values
    - name: get-version
      params:
        - name: CODEBASEBRANCH_NAME
          value: $(params.CODEBASEBRANCH_NAME)
      runAfter:
        - init-values
      taskRef:
        kind: Task
        name: get-version-edp
    ######################## Run pipeline logic here -START- ########################

    ######################## Run pipeline logic here -END-   ########################
    - name: create-ecr-repository
      params:
        - name: REPO_NAME
          value: $(tasks.init-values.results.TENANT_NAME)/$(params.CODEBASE_NAME)
      runAfter:
        - get-version
      taskRef:
        kind: Task
        name: create-ecr-repository
    - name: kaniko-build
      params:
        - name: IMAGE
          value: >-
            $(tasks.init-values.results.DOCKER_REGISTRY_HOST)/$(tasks.init-values.results.TENANT_NAME)/$(params.CODEBASE_NAME):$(tasks.get-version.results.IS_TAG)
      runAfter:
        - create-ecr-repository
      taskRef:
        kind: Task
        name: kaniko
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: git-tag
      params:
        - name: GIT_USER_EMAIL
          value: edp-ci@edp.ci-user
        - name: GIT_USER_NAME
          value: edp-ci
        - name: GIT_SCRIPT
          value: >
            git tag -a "$(tasks.get-version.results.VCS_TAG)" -m "Tag is added
            automatically by CI user"

            git push --tags
      runAfter:
        - kaniko-build
      taskRef:
        kind: Task
        name: git-cli
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: ssh-directory
          workspace: ssh-creds
    - name: update-cbis
      params:
        - name: CBIS_NAME
          value: $(tasks.init-values.results.RESULT_IMAGE_NAME)
        - name: IMAGE_TAG
          value: $(tasks.get-version.results.IS_TAG)
      runAfter:
        - git-tag
      taskRef:
        kind: Task
        name: update-cbis
  workspaces:
    - name: shared-workspace
    - name: ssh-creds
